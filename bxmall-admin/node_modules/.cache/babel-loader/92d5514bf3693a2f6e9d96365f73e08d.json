{"remainingRequest":"D:\\banxue-repository\\bxmall-frontend\\linjiashop-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!D:\\banxue-repository\\bxmall-frontend\\linjiashop-admin\\src\\views\\shop\\category\\category.js","dependencies":[{"path":"D:\\banxue-repository\\bxmall-frontend\\linjiashop-admin\\src\\views\\shop\\category\\category.js","mtime":1611565388582},{"path":"D:\\banxue-repository\\bxmall-frontend\\linjiashop-admin\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\banxue-repository\\bxmall-frontend\\linjiashop-admin\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/banxue-repository/bxmall-frontend/linjiashop-admin/node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _category = _interopRequireDefault(require(\"@/api/shop/category\"));\n\nvar _attrKey = _interopRequireDefault(require(\"@/api/shop/attrKey\"));\n\nvar _attrVal = _interopRequireDefault(require(\"@/api/shop/attrVal\"));\n\nvar _utils = require(\"@/utils/utils\");\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _default = {\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      formVisible: false,\n      formTitle: '添加商品类别',\n      isAdd: true,\n      form: {\n        name: '',\n        url: '',\n        icon: '',\n        id: ''\n      },\n      listQuery: {\n        page: 1,\n        limit: 20,\n        id: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      apiUrl: (0, _utils.getApiUrl)(),\n      banner: {\n        idCategory: '',\n        activeName: 'first',\n        visible: false,\n        list: []\n      },\n      attrKey: {\n        idCategory: '',\n        visible: false,\n        list: []\n      },\n      attrVal: {\n        idAttrKey: '',\n        visible: false,\n        list: []\n      }\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.listLoading = true;\n\n      _category.default.getList(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.id = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    resetForm: function resetForm() {\n      this.form = {\n        name: '',\n        url: '',\n        icon: '',\n        id: ''\n      };\n    },\n    add: function add() {\n      this.resetForm();\n      this.formTitle = '添加商品类别', this.formVisible = true;\n      this.isAdd = true;\n    },\n    save: function save() {\n      var _this2 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _category.default.save({\n            name: _this2.form.name,\n            url: _this2.form.url,\n            icon: _this2.form.icon,\n            id: _this2.form.id\n          }).then(function (response) {\n            _this2.$message({\n              message: _this2.$t('common.optionSuccess'),\n              type: 'success'\n            });\n\n            _this2.fetchData();\n\n            _this2.formVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    edit: function edit() {\n      if (this.checkSel()) {\n        this.isAdd = false;\n        this.form = this.selRow;\n        this.formTitle = '编辑商品类别';\n        this.formVisible = true;\n      }\n    },\n    remove: function remove() {\n      var _this3 = this;\n\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm(this.$t('common.deleteConfirm'), this.$t('common.tooltip'), {\n          confirmButtonText: this.$t('button.submit'),\n          cancelButtonText: this.$t('button.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _category.default.remove(id).then(function (response) {\n            _this3.$message({\n              message: _this3.$t('common.optionSuccess'),\n              type: 'success'\n            });\n\n            _this3.fetchData();\n          }).catch(function (err) {});\n        }).catch(function () {});\n      }\n    },\n    bannerMgr: function bannerMgr(idCategory) {\n      var _this4 = this;\n\n      this.banner.visible = true;\n      this.banner.idCategory = idCategory;\n\n      _category.default.getBanners(idCategory).then(function (response) {\n        _this4.banner.list = response.data;\n        console.log('banner', _this4.banner);\n      });\n    },\n    bannerRemove: function bannerRemove(id) {\n      var _this5 = this;\n\n      _category.default.removeBanner(this.banner.idCategory, id).then(function (response) {\n        _this5.$message({\n          message: _this5.$t('common.optionSuccess'),\n          type: 'success'\n        });\n\n        _this5.bannerMgr(_this5.banner.idCategory);\n      });\n    },\n    bannerEdit: function bannerEdit() {},\n    addBanner: function addBanner() {\n      this.$router.push({\n        path: 'banner',\n        query: {\n          idCategory: this.banner.idCategory\n        }\n      });\n    },\n    attrKeyMgr: function attrKeyMgr(idCategory) {\n      var _this6 = this;\n\n      this.attrKey.visible = true;\n      this.attrKey.idCategory = idCategory;\n\n      _category.default.getAttrKeys(idCategory).then(function (response) {\n        _this6.attrKey.list = response.data;\n      });\n    },\n    attrKeyAdd: function attrKeyAdd() {\n      var _this7 = this;\n\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(function (_ref) {\n        var value = _ref.value;\n\n        if (!value || value === '') {\n          _this7.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n\n        _attrKey.default.save({\n          attrName: value,\n          idCategory: _this7.attrKey.idCategory\n        }).then(function (response) {\n          _this7.$message({\n            type: 'success',\n            message: '新增属性成功'\n          });\n\n          _category.default.getAttrKeys(_this7.attrKey.idCategory).then(function (response2) {\n            _this7.attrKey.list = response2.data;\n          });\n        });\n      });\n    },\n    attrKeyEdit: function attrKeyEdit(item) {\n      var _this8 = this;\n\n      console.log('item', item);\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: item.attrName\n      }).then(function (_ref2) {\n        var value = _ref2.value;\n\n        if (!value || value === '') {\n          _this8.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n\n        _attrKey.default.updateAttrName(item.id, value).then(function (response) {\n          item.attrName = value;\n\n          _this8.$message({\n            type: 'success',\n            message: '编辑成功'\n          });\n        });\n\n        return;\n      });\n    },\n    attrKeyRemove: function attrKeyRemove(id) {\n      var _this9 = this;\n\n      console.log('id', id);\n\n      _attrKey.default.remove(id).then(function (response) {\n        _this9.$message({\n          type: 'success',\n          message: '删除成功'\n        });\n\n        _category.default.getAttrKeys(_this9.attrKey.idCategory).then(function (response2) {\n          _this9.attrKey.list = response2.data;\n        });\n      });\n    },\n    openAttrValDialog: function openAttrValDialog(item) {\n      var _this10 = this;\n\n      this.attrVal.idAttrKey = item.id;\n      this.attrVal.visible = true;\n      console.log('item', item);\n\n      _attrVal.default.getAttrVals(this.attrVal.idAttrKey).then(function (response2) {\n        _this10.attrVal.list = response2.data;\n      });\n    },\n    attrValAdd: function attrValAdd() {\n      var _this11 = this;\n\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(function (_ref3) {\n        var value = _ref3.value;\n\n        if (!value || value === '') {\n          _this11.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n\n        _attrVal.default.save({\n          attrVal: value,\n          idAttrKey: _this11.attrVal.idAttrKey\n        }).then(function (response) {\n          _this11.$message({\n            type: 'success',\n            message: '新增属性成功'\n          });\n\n          _attrVal.default.getAttrVals(_this11.attrVal.idAttrKey).then(function (response2) {\n            _this11.attrVal.list = response2.data;\n          });\n        });\n      });\n    },\n    attrValEdit: function attrValEdit(item) {\n      var _this12 = this;\n\n      console.log('item', item);\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: item.attrVal\n      }).then(function (_ref4) {\n        var value = _ref4.value;\n\n        if (!value || value === '') {\n          _this12.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n\n        _attrVal.default.updateAttrVal(item.id, value).then(function (response) {\n          item.attrName = value;\n\n          _this12.$message({\n            type: 'success',\n            message: '编辑成功'\n          });\n\n          _attrVal.default.getAttrVals(_this12.attrVal.idAttrKey).then(function (response2) {\n            _this12.attrVal.list = response2.data;\n          });\n        });\n\n        return;\n      });\n    },\n    attrValRemove: function attrValRemove(id) {\n      var _this13 = this;\n\n      console.log('id', id);\n\n      _attrVal.default.remove(id).then(function (response) {\n        _this13.$message({\n          type: 'success',\n          message: '删除成功'\n        });\n\n        _attrVal.default.getAttrVals(_this13.attrVal.idAttrKey).then(function (response2) {\n          _this13.attrVal.list = response2.data;\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}